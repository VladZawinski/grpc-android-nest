/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace chat {
    export interface ChatService {
        connect(
            data: ChatConnection,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Empty>;
        sendMessage(
            data: ChatMessage,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<Empty>;
        onMessageUpdated(
            data: Observable<Empty>,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<MessageList>;
        getStockUpdates(
            data: Observable<Empty>,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<StockList>;
    }
    export interface ChatConnection {
        userId?: string;
        username?: string;
    }
    export interface ChatMessage {
        userId?: string;
        username?: string;
        content?: string;
        timestamp?: number;
    }
    // tslint:disable-next-line:no-empty-interface
    export interface Empty {
    }
    export interface MessageList {
        messages?: chat.ChatMessage[];
    }
    export interface StockResponse {
        symbol?: string;
        price?: number;
    }
    export interface StockList {
        stock?: chat.StockResponse[];
    }
}

